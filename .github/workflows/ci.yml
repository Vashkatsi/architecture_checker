name: Python package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover tests

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_type == 'tag'

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Update version in setup.py
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/v}"
          sed -i "s/__version__ = .*/__version__ = '${TAG_NAME}'/" deply/__init__.py
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b temp-branch
          git add deply/__init__.py
          git commit -m "Update version to ${TAG_NAME} from tag ${GITHUB_REF}"
          git push origin temp-branch:main

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python setup.py sdist bdist_wheel
          python -m twine upload dist/*
