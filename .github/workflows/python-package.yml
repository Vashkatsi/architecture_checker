name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover tests

      - name: Publish to PyPI
        if: github.ref == 'refs/heads/main' && steps.version.outputs.changed == 'true'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python setup.py sdist bdist_wheel
          twine upload dist/*

  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get current version
        id: version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 || echo "")
          current_version=$(python setup.py --version)
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Determine version change
        id: check_version
        run: |
          if [ "$latest_tag" != "$current_version" ]; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi
